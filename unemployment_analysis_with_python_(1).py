# -*- coding: utf-8 -*-
"""Unemployment Analysis with Python (1).ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/142YlGAfrZTm5O6dODxiNrAKA_4d8bxqP

Import Libraries
"""

# Commented out IPython magic to ensure Python compatibility.
import numpy as np
import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns
import calendar
import datetime as dt
import warnings
warnings.filterwarnings('ignore')
# %matplotlib inline

"""Dataset Loading"""

df = pd.read_csv('/content/drive/MyDrive/Unemployment_Rate_upto_11_2020 - Unemployment_Rate_upto_11_2020.csv')

df.head()

"""Dataset Rows and Columns count"""

print("Number of rows are: ",df.shape[0])
print("Number of columns are: ",df.shape[1])
print("Number of rows and columns are: ",df.shape)

"""Dataset Information"""

df.info()

"""Duplicate Values"""

df.duplicated().sum()

"""Missing / Null Values"""

df.isnull().sum()

sns.heatmap(df.isnull(), cbar=False)

"""Understanding The Variables"""

df.columns

df.describe()

"""Check Unique Values for each Variables"""

for i in df.columns.tolist():
  print("No. of unique values in",i,"is",df[i].nunique())

"""Data Wrangling"""

existing_columns = df.columns.tolist()
new_columns = ['States', 'Date', 'Frequency', 'Estimated Unemployment Rate', 'Estimated Employed', 'Estimated Labour Participation Rate', 'Region']
new_columns.extend(existing_columns[len(new_columns):])
df.columns = new_columns
df['Frequency'] = df['Frequency'].astype('category')
df['Date'] = pd.to_datetime(df['Date'], dayfirst=True)
df['Region'] = df['Region'].astype('category')
df['Month'] = df['Date'].dt.month
df['Month_int'] = df['Month'].apply(lambda x: int(x) if pd.notna(x) else x)
df.drop(columns='Month', inplace=True)
df_ld = df.copy()
df=df.dropna()
mask = (df['Date'] >= '2019-05-31') & (df['Date'] <= '2020-03-31')
df = df.loc[mask]
df.reset_index(drop=True, inplace=True)
mask = (df_ld['Date'] >= '2020-04-30')
df_ld = df_ld.loc[mask]

"""Data Visualization

Chart - 1 : Region Wise Estimated Unemployment Rate
"""

plt.figure(figsize=(14, 5))
plt.subplot(1, 2, 1)
sns.barplot(x='Region', y='Estimated Unemployment Rate', data=df)
plt.title('Region wise Estimated Unemployment Rate Before Lockdown (May 2019 - Mar 2020)')
plt.xticks(rotation=90)
plt.subplot(1, 2, 2)
sns.barplot(x='Region', y='Estimated Unemployment Rate', data=df_ld)
plt.title('Region wise Estimated Unemployment Rate During Lockdown (Apr 2020 Onwards)')
plt.xticks(rotation=90)
plt.tight_layout()
plt.show()

"""Chart - 2 : Swarm Plot for State Wise Estimated Unemployment Rate"""

plt.figure(figsize=(14, 5))
plt.subplot(1, 2, 1)
sns.swarmplot(x='States', y='Estimated Unemployment Rate', data=df)
plt.title('State wise Estimated Unemployment Rate Before Lockdown (May 2019 - Mar 2020)')
plt.xticks(rotation=90)
plt.subplot(1, 2, 2)
sns.swarmplot(x='States', y='Estimated Unemployment Rate', data=df_ld)
plt.title('State wise Estimated Unemployment Rate During Lockdown (Apr 2020 Onwards)')
plt.xticks(rotation=90)
plt.tight_layout()
plt.show()

"""Chart - 3 : Bar Plot for State Wise Estimated Unemployment Rate"""

plt.figure(figsize=(14, 5))
plt.subplot(1, 2, 1)
sns.barplot(x='States', y='Estimated Unemployment Rate', data=df)
plt.title('State wise Estimated Unemployment Rate Before Lockdown (May 2019 - Mar 2020)')
plt.xticks(rotation=90)
plt.subplot(1, 2, 2)
sns.barplot(x='States', y='Estimated Unemployment Rate', data=df_ld)
plt.title('State wise Estimated Unemployment Rate During Lockdown (Apr 2020 Onwards)')
plt.xticks(rotation=90)
plt.tight_layout()
plt.show()

"""Chart - 4 : State Wise Estimated Employed Workforce"""

plt.figure(figsize=(14, 5))
plt.subplot(1, 2, 1)
sns.barplot(x='States', y='Estimated Employed', data=df)
plt.title('State wise Estimated Employed Workforce Before Lockdown (May 2019 - Mar 2020)')
plt.xticks(rotation=90)
plt.subplot(1, 2, 2)
sns.barplot(x='States', y='Estimated Employed', data=df_ld)
plt.title('State wise Estimated Employed Workforce During Lockdown (Apr 2020 Onwards)')
plt.xticks(rotation=90)
plt.tight_layout()
plt.show()

"""Chart - 5 : State Wise Estimated Labour Participation Rate"""

plt.figure(figsize=(14, 5))
plt.subplot(1, 2, 1)
sns.barplot(x='States', y='Estimated Labour Participation Rate', data=df)
plt.title('State wise Estimated Labour Participation Rate Before Lockdown (May 2019 - Mar 2020)')
plt.xticks(rotation=90)
plt.subplot(1, 2, 2)
sns.barplot(x='States', y='Estimated Labour Participation Rate', data=df_ld)
plt.title('State wise Estimated Labour Participation Rate During Lockdown (Apr 2020 Onwards)')
plt.xticks(rotation=90)
plt.tight_layout()
plt.show()

"""Chart - 6 : Correlation Heatmap"""

df_corr = df[['Estimated Unemployment Rate', 'Estimated Employed', 'Estimated Labour Participation Rate']]
df_ld_corr = df_ld[['Estimated Unemployment Rate', 'Estimated Employed', 'Estimated Labour Participation Rate']]

plt.figure(figsize=(12, 5))
plt.subplot(1, 2, 1)
sns.heatmap(df_corr.corr(), annot=True, cmap='coolwarm')
plt.title('Correlation Heatmap Before Lockdown (May 2019 - Mar 2020)')
plt.subplot(1, 2, 2)
sns.heatmap(df_ld_corr.corr(), annot=True, cmap='coolwarm')
plt.title('Correlation Heatmap During Lockdown (Apr 2020 Onwards)')

plt.tight_layout()
plt.show()